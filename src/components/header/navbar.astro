---
import Container from "../container.astro";
import logoImage from "../../assets/logo.svg";
import darkLogo from "../../assets/logo-dark.svg";
import { Image } from "astro:assets";
import ThemeToggle from "./theme-toggle.astro";
import config from "@config/config.json";
import theme from "@config/theme.json";
import footer from "@config/components/footer.json";

const mobilemenu = [...config.pages.leftmenu, ...config.pages.rightmenu];
---

<Container>
  <nav>
    <div class="flex flex-wrap justify-between md:flex-nowrap md:gap-10">
      <div
        class="order-1 hidden w-full flex-col items-center justify-start md:order-none md:flex md:w-auto md:flex-1 md:flex-row md:justify-end"
      >
        {
          config.pages.leftmenu.map((link) => (
            <a
              href={`${link.slug}`}
              class="px-5 py-2 text-sm font-medium capitalize text-gray-600 hover:text-blue-500 dark:text-gray-300"
            >
              {link.title}
            </a>
          ))
        }
      </div>

      <div class="flex w-full items-center justify-between md:w-auto">
        <a class="w-28 dark:hidden" href="/">
          <Image src={logoImage} alt={footer.site_name} />
        </a>

        <a class="hidden w-28 dark:block" href="/">
          <Image src={darkLogo} alt={footer.site_name} />
        </a>

        <button
          id="menu"
          aria-label="Toggle Menu"
          class="ml-auto rounded-md px-2 py-1 text-gray-500 focus:text-blue-500 focus:outline-none md:hidden dark:text-gray-300"
        >
          <svg
            class="h-6 w-6 fill-current"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
          >
            <path
              class="navmenu-toggle"
              fill-rule="evenodd"
              d="M4 5h16a1 1 0 0 1 0 2H4a1 1 0 1 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2z"
            ></path>

            <path
              class="navmenu-toggle hidden"
              fill-rule="evenodd"
              clip-rule="evenodd"
              d="M18.278 16.864a1 1 0 0 1-1.414 1.414l-4.829-4.828-4.828 4.828a1 1 0 0 1-1.414-1.414l4.828-4.829-4.828-4.828a1 1 0 0 1 1.414-1.414l4.829 4.828 4.828-4.828a1 1 0 1 1 1.414 1.414l-4.828 4.829 4.828 4.828z"
            ></path>
          </svg>
        </button>
        <div class="md:hidden"><ThemeToggle /></div>
      </div><div
        class="order-2 hidden w-full flex-col items-center justify-start md:order-none md:flex md:w-auto md:flex-1 md:flex-row"
      >
        {
          config.pages.rightmenu.map((link) => (
            <a
              href={`${link.slug}`}
              class="px-5 py-2 text-sm font-medium text-gray-600 hover:text-blue-500 dark:text-gray-300"
            >
              {link.title}
            </a>
          ))
        }
        <ThemeToggle />
      </div>
    </div>
    <div class="navmenu-toggle hidden">
      <div
        class="order-2 flex w-full flex-col items-center justify-start md:hidden"
      >
        {
          mobilemenu.map((link) => (
            <a
              href={`${link.slug}`}
              class="px-5 py-2 text-sm font-medium text-gray-600 hover:text-blue-500 dark:text-gray-300"
            >
              {link.title}
            </a>
          ))
        }
      </div>
    </div>
  </nav>
</Container>

<script is:inline>
  const menuButton = document.getElementById("menu");
  menuButton.addEventListener("click", () => {
    [...document.querySelectorAll(".navmenu-toggle")].forEach((Element) => {
      Element.classList.toggle("hidden");
    });
  });
</script>

<script is:inline define:vars={{ theme }}>
  if (theme.features.darkMode.enabled) {
    const handleToggleClick = async () => {
      const element = document.documentElement;
      element.classList.toggle("dark");

      const isDark = element.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    };

    function initTheme() {
      const theme = localStorage.getItem("theme");

      if (theme === "dark") {
        document.documentElement.classList.add("dark");
      } else {
        document.documentElement.classList.remove("dark");
      }

      const themeToggle = document.querySelectorAll(".theme-toggle");
      themeToggle.forEach((el) =>
        el.addEventListener("click", handleToggleClick),
      );
    }

    initTheme();
  }
</script>
